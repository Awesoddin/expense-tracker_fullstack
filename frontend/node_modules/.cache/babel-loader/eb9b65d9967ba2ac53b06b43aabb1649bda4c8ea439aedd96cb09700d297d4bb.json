{"ast":null,"code":"var _jsxFileName = \"C:\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const BASE_URL = \"http://localhost:5000/api/v1/\";\n  const getAuthHeaders = () => ({\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n\n  //calculate incomes\n  const addIncome = async income => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-income`, income, getAuthHeaders());\n      getIncomes();\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`, getAuthHeaders());\n      setIncomes(response.data);\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  const deleteIncome = async id => {\n    try {\n      const res = await axios.delete(`${BASE_URL}delete-income/${id}`, getAuthHeaders());\n      getIncomes();\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  //calculate expenses\n  const addExpense = async expense => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-expense`, expense, getAuthHeaders());\n      getExpenses();\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`, getAuthHeaders());\n      setExpenses(response.data);\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  const deleteExpense = async id => {\n    try {\n      const res = await axios.delete(`${BASE_URL}delete-expense/${id}`, getAuthHeaders());\n      getExpenses();\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  const totalExpenses = () => {\n    let totalExpense = 0;\n    expenses.forEach(expense => {\n      totalExpense = totalExpense + expense.amount;\n    });\n    return totalExpense;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","BASE_URL","getAuthHeaders","headers","localStorage","getItem","addIncome","income","response","post","getIncomes","err","data","message","get","deleteIncome","id","res","delete","totalIncome","forEach","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalExpense","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","useGlobalContext"],"sources":["C:/expense-tracker_fullstack/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\n    const getAuthHeaders = () => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n    });\r\n\r\n    //calculate incomes\r\n    const addIncome = async (income) => {\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}add-income`, income, getAuthHeaders())\r\n            getIncomes()\r\n        } catch (err) {\r\n            setError(err.response.data.message)\r\n        }\r\n    }\r\n\r\n    const getIncomes = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-incomes`, getAuthHeaders())\r\n            setIncomes(response.data)\r\n        } catch (err) {\r\n            setError(err.response.data.message)\r\n        }\r\n    }\r\n\r\n    const deleteIncome = async (id) => {\r\n        try {\r\n            const res  = await axios.delete(`${BASE_URL}delete-income/${id}`, getAuthHeaders())\r\n            getIncomes()\r\n        } catch (err) {\r\n            setError(err.response.data.message)\r\n        }\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n    //calculate expenses\r\n    const addExpense = async (expense) => {\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}add-expense`, expense, getAuthHeaders())\r\n            getExpenses()\r\n        } catch (err) {\r\n            setError(err.response.data.message)\r\n        }\r\n    }\r\n\r\n    const getExpenses = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-expenses`, getAuthHeaders())\r\n            setExpenses(response.data)\r\n        } catch (err) {\r\n            setError(err.response.data.message)\r\n        }\r\n    }\r\n\r\n    const deleteExpense = async (id) => {\r\n        try {\r\n            const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`, getAuthHeaders())\r\n            getExpenses()\r\n        } catch (err) {\r\n            setError(err.response.data.message)\r\n        }\r\n    }\r\n\r\n    const totalExpenses = () => {\r\n        let totalExpense = 0;\r\n        expenses.forEach((expense) =>{\r\n            totalExpense = totalExpense + expense.amount\r\n        })\r\n\r\n        return totalExpense;\r\n    }\r\n\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}